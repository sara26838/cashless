{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Services/authservice.service.ts","./src/app/Services/customers.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/listing/listing.component.ts","./src/app/listing/listing.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/token-interceptor-service.interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable , Injector} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthserviceService {\n  private loginUrl=\"https://reqres.in/api/login\"\n  constructor(private http:HttpClient) { }\n  showErrorMessage = false;\n  loginUser(user):Observable<any>{\n  //  return this.http.post<any>(this.loginUrl,user)\n  return this.http.post<any>(this.loginUrl,user)\n  \n}\n\nloggedIn(){\n  return  !!localStorage.getItem('token')\n}\ngetToken(){\n  localStorage.getItem('token')\n}\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Customers} from '../model/Customers'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n  private customersUrl=\"https://reqres.in/api/users?page=1\"\n  private customer2sUrl=\"https://reqres.in/api/users?page=\"\n  private userID=\"https://reqres.in/api/users\"\n  constructor(private http:HttpClient) { }\n\n  getUsers() :Observable<any>{\n  //  return this.http.post<any>(this.loginUrl,user)\n  return this.http.get<Customers[]>(this.userID)\n\n}\ngetUsers2(id) :Observable<any>{\n  //  return this.http.post<any>(this.loginUrl,user)\n  return this.http.get<Customers[]>(this.customer2sUrl+id)\n\n}\n\ngetCurrendUser(id) :Observable<any>{\n  //  return this.http.post<any>(this.loginUrl,user)\n  return this.http.get(\"https://reqres.in/api/users/\"+id)\n\n}\nupdateUser(id ,data) :Observable<any>{\n\n  return this.http.put(\"https://reqres.in/api/users/\"+id ,data)\n\n}\ndelete(id) :Observable<any>{\n  return this.http.delete(\"https://reqres.in/api/users/\"+id)\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { ListingComponent } from './listing/listing.component';\nimport { LoginComponent } from './login/login.component';\n\n\n\nconst routes: Routes = [{path:\"\",component:HomeComponent},{path:\"login\",component:LoginComponent},{path:\"list\",component:ListingComponent, canActivate:[AuthGuard]},{path:\"list/:id\",component:ListingComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'task';\n}\n","<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { ListingComponent } from './listing/listing.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule, HttpResponse, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthGuard} from './auth.guard'\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {TokenInterceptorServiceInterceptor} from '../app/token-interceptor-service.interceptor'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    ListingComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    Ng2SearchPipeModule,\n    Ng2OrderModule,\n    NgxPaginationModule,\n  \n  ],\n  providers: [AuthGuard,{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorServiceInterceptor,\n    multi:true\n  }\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthserviceService } from './Services/authservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor (private _authService:AuthserviceService, private router :Router){}\n  canActivate(): boolean {\n   if (this._authService.loggedIn()){\n     return true\n   }else{\n     this.router.navigateByUrl('/');\n     return false\n\n   }\n  }\n  \n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit ,AfterViewInit {\n  @ViewChild('loginbutton') login: ElementRef<HTMLElement>;\n  @ViewChild('customerbutton') list: ElementRef<HTMLElement>;\n  constructor() { }\n  ngAfterViewInit(): void {\n    let token=localStorage.getItem(\"token\")\n    if(token){\n     this.login.nativeElement.style.display=\"none\"\n     this.list.nativeElement.style.display=\"block\"\n    }else{\n      this.login.nativeElement.style.display=\"block\"\n      this.list.nativeElement.style.display=\"none\"\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light fixed-top py-3\" id=\"mainNav\">\n  <div class=\"container px-4 px-lg-5\">\n    <button\n      class=\"navbar-toggler navbar-toggler-right\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarResponsive\"\n      aria-controls=\"navbarResponsive\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ms-auto my-2 my-lg-0\"></ul>\n    </div>\n  </div>\n</nav>\n<!-- Masthead-->\n<header class=\"masthead\">\n  <div class=\"container px-4 px-lg-5 h-100\">\n    <div\n      class=\"\n        row\n        gx-4 gx-lg-5\n        h-100\n        align-items-center\n        justify-content-center\n        text-center\n      \"\n    >\n      <div class=\"col-lg-8 align-self-end\">\n        <h1 class=\"text-white font-weight-bold\">Welcome please login</h1>\n        <hr class=\"divider\" />\n      </div>\n      <div class=\"col-lg-8 align-self-baseline\">\n        <a #loginbutton class=\"btn-xl\" routerLink=\"login\">LogIn</a>\n        <a #customerbutton class=\"btn-xl Csutomer\"  routerLink=\"list\">Customer list</a>\n      </div>\n    </div>\n  </div>\n</header>\n","import { HttpClient } from '@angular/common/http';\nimport {\n  Component,\n  ElementRef,\n  OnInit,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { startWith } from 'rxjs/operators';\nimport { Customers } from '../model/Customers';\nimport { CustomersService } from '../Services/customers.service';\nlet CACHE_KEY = 'httpRepoCache';\n@Component({\n  selector: 'app-listing',\n  templateUrl: './listing.component.html',\n  styleUrls: ['./listing.component.css'],\n})\nexport class ListingComponent implements OnInit {\n  @ViewChildren('name') name: QueryList<ElementRef>;\n  @ViewChildren('job') job: QueryList<ElementRef>;\n  @ViewChild('completeModal') completeModal: ElementRef;\n  @ViewChild('updated') updated: ElementRef<HTMLElement>;\n\n  first_name: any;\n  p: number = 1;\n  user: any = 'hghg';\n  userEmail: any;\n  userFirstname: any;\n  userLastname: any;\n  userImage: any;\n  total: any;\n  total_pages: any;\n\n  constructor(\n    private _customerService: CustomersService,\n    private router: Router\n  ) {}\n\n  updateForm = new FormGroup({\n    name: new FormControl(''),\n    job: new FormControl(''),\n  });\n  customers: Customers[] = [];\n  ngOnInit(): void {\n    this._customerService.getUsers().subscribe((data) => {\n      this.total_pages = data.total_pages;\n\n      for (let i = 1; i <= this.total_pages; i++) {\n        this._customerService.getUsers2(i).subscribe((response) => {\n          var customerData = response.data;\n          for (let j = 0; j < customerData.length; j++) {\n            this.customers.push(customerData[j]);\n          }\n          localStorage.setItem(CACHE_KEY, JSON.stringify(this.customers));\n          this._customerService\n            .getUsers2(i)\n            .pipe(startWith(JSON.parse(localStorage[CACHE_KEY] || '[]')));\n        });\n      }\n    });\n  }\n  Search() {\n    if (this.first_name == '') {\n      this.ngOnInit();\n    } else {\n      this.customers = this.customers.filter((res) => {\n        return res.first_name\n          .toLocaleLowerCase()\n          .match(this.first_name.toLocaleLowerCase());\n      });\n    }\n  }\n  key = 'id';\n  reverse: boolean = false;\n  bn: boolean = false;\n  sort(key) {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n\n  update(e) {\n    this._customerService\n      .updateUser(e.target.id, this.updateForm.value)\n      .subscribe((result) => {});\n    this.name.forEach((firstName) => {\n      if (e.target.id == firstName.nativeElement.id) {\n        firstName.nativeElement.innerHTML = this.updateForm.controls.name.value;\n      }\n    });\n\n    this.job.forEach((jobb) => {\n      if (e.target.id == jobb.nativeElement.id) {\n        jobb.nativeElement.innerHTML = this.updateForm.controls.job.value;\n      }\n    });\n  }\n\n  delete(e) {\n    alert('Delete user ?');\n    this._customerService.delete(e);\n    for (let i = 0; i < this.customers.length; i++) {\n      if (this.customers[i].id == e) {\n        const index = i;\n        this.customers.splice(index, 1);\n      }\n    }\n  }\n  getUser(e) {\n    this.name.forEach((firstName) => {\n      if (e == firstName.nativeElement.id) {\n        this.updateForm = new FormGroup({\n          name: new FormControl(firstName.nativeElement.innerHTML),\n          job: new FormControl('nojob'),\n        });\n      }\n    });\n\n    this.job.forEach((jobb) => {\n      if (e == jobb.nativeElement.id) {\n        this.updateForm.controls['job'].setValue(jobb.nativeElement.innerHTML);\n      }\n    });\n  }\n  getUserDetails(id) {\n    this._customerService.getCurrendUser(id).subscribe((details) => {\n      this.userEmail = details.data.email;\n      this.userFirstname = details.data.first_name;\n      this.userLastname = details.data.last_name;\n      this.userImage = details.data.avatar;\n    });\n  }\n  trackby(index: number, customer: any): string {\n    return customer.id;\n  }\n  LogOut() {\n localStorage.removeItem('token');\n\n    this.router.navigateByUrl('/');\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <p\n      (click)=\"LogOut()\"\n      style=\"\n        text-align: right;\n        margin-bottom: 100px;\n        color: #f4623a;\n        cursor: pointer;\n      \"\n    >\n      LogOut\n    </p>\n    <div class=\"col-md-12\">\n      <nav>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          name=\"first_name\"\n          [(ngModel)]=\"first_name\"\n          (ngModelChange)=\"Search()\"\n          placeholder=\"Search\"\n        />\n      </nav>\n      <table class=\"table mt-5\">\n        <thead>\n          <tr>\n            <th (click)=\"sort('id')\">Id&nbsp;<i class=\"fa fa-sort\"></i></th>\n            <th>Image</th>\n            <th (click)=\"sort('email')\">\n              Email&nbsp;<i class=\"fa fa-sort\"></i>\n            </th>\n            <th (click)=\"sort('first_name')\">\n              First name&nbsp;<i class=\"fa fa-sort\"></i>\n            </th>\n            <th (click)=\"sort('last_name')\">\n              Last name&nbsp;<i class=\"fa fa-sort\"></i>\n            </th>\n            <th>Job</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"\n              let user of customers\n                | orderBy: key:reverse\n                | paginate: { itemsPerPage: 6, currentPage: p };\n              trackBy: trackby\n            \"\n          >\n            <td>{{ user.id }}</td>\n            <td><img [src]=\"[user.avatar]\" /></td>\n            <td>{{ user.email }}</td>\n            <td #name [id]=\"user.id\">{{ user.first_name }}</td>\n            <td>{{ user.last_name }}</td>\n            <td #job [id]=\"user.id\">no job</td>\n            <td>\n              <button\n                (click)=\"getUserDetails(user.id)\"\n                data-bs-toggle=\"modal\"\n                [attr.data-bs-target]=\"'#' + user.last_name + user.id\"\n                [id]=\"user.id\"\n                class=\"btn btn-primary\"\n              >\n                View\n              </button>\n            </td>\n            <td>\n              <button\n                (click)=\"getUser(user.id)\"\n                data-bs-toggle=\"modal\"\n                [attr.data-bs-target]=\"'#' + user.first_name + user.id\"\n                [id]=\"user.id\"\n                class=\"btn btn-success\"\n              >\n                Edit\n              </button>\n            </td>\n\n            <td>\n              <button\n                (click)=\"delete(user.id)\"\n                [id]=\"user.id\"\n                class=\"btn btn-danger\"\n              >\n                Delete\n              </button>\n            </td>\n\n            <!-- user update modal -->\n            <div\n              #model\n              class=\"modal fade\"\n              [id]=\"user.first_name + user.id\"\n              tabindex=\"-1\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                      Update User\n                    </h5>\n                    <button\n                      type=\"button\"\n                      class=\"btn-close\"\n                      data-bs-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"formBox\">\n                      <form\n                        [id]=\"user.id\"\n                        (ngSubmit)=\"update($event)\"\n                        [formGroup]=\"updateForm\"\n                      >\n                        <div class=\"form-group\" class=\"mb-5\">\n                          <label>Name</label>\n                          <input\n                            formControlName=\"name\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            aria-describedby=\"emailHelp\"\n                          />\n                        </div>\n                        <div class=\"form-group\">\n                          <label>Job</label>\n                          <input\n                            formControlName=\"job\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            id=\"exampleInputPassword1\"\n                          />\n                        </div>\n\n                        <button\n                          type=\"submit\"\n                          class=\"btn btn-success mt-3\"\n                          style=\"margin-right: 20px\"\n                        >\n                          Update\n                        </button>\n                        <button\n                          data-bs-dismiss=\"modal\"\n                          class=\"btn btn-secondary mt-3\"\n                        >\n                          Close\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- user update modal -->\n            <div\n              #model\n              class=\"modal fade\"\n              [id]=\"user.first_name + user.id\"\n              tabindex=\"-1\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                      Update User\n                    </h5>\n                    <button\n                      type=\"button\"\n                      class=\"btn-close\"\n                      data-bs-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"formBox\">\n                      <form\n                        [id]=\"user.id\"\n                        (ngSubmit)=\"update($event)\"\n                        [formGroup]=\"updateForm\"\n                      >\n                        <div class=\"form-group\" class=\"mb-5\">\n                          <label>Name</label>\n                          <input\n                            formControlName=\"name\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            aria-describedby=\"emailHelp\"\n                          />\n                        </div>\n                        <div class=\"form-group\">\n                          <label>Job</label>\n                          <input\n                            formControlName=\"job\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            id=\"exampleInputPassword1\"\n                          />\n                        </div>\n\n                        <button\n                          type=\"submit\"\n                          class=\"btn btn-success mt-3\"\n                          style=\"margin-right: 20px\"\n                        >\n                          Update\n                        </button>\n                        <button\n                          data-bs-dismiss=\"modal\"\n                          class=\"btn btn-secondary mt-3\"\n                        >\n                          Close\n                        </button>\n                      </form>\n                    </div>\n\n                    <p #updated class=\"updated\">Data Updated</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- user Information modal -->\n            <div\n              class=\"modal fade\"\n              [id]=\"user.last_name + user.id\"\n              tabindex=\"-1\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                      User Info\n                    </h5>\n                    <button\n                      type=\"button\"\n                      class=\"btn-close\"\n                      data-bs-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div style=\"margin: auto\">\n                      <div>\n                        <img [src]=\"userImage\" />\n                      </div>\n                      <div>\n                        <span class=\"title\">First Name : </span>\n                        <span class=\"value\">{{ userFirstname }}</span>\n                      </div>\n                      <div>\n                        <span class=\"title\">Last Name : </span>\n                        <span class=\"value\">{{ userLastname }}</span>\n                      </div>\n                      <div>\n                        <span class=\"title\">Email : </span>\n                        <span class=\"value\">{{ userEmail }}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </tr>\n        </tbody>\n        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport{AuthserviceService} from '../Services/authservice.service'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm:FormGroup\n  constructor(private _authService:AuthserviceService , private fb:FormBuilder , private router:Router) {\n    this.loginForm=this.fb.group({\n      email:new FormControl('',[Validators.required,Validators.email]),\n      password:new FormControl('',[Validators.required])\n    })\n   }\n \n  ngOnInit(): void {\n  }\n  showErrorMessage:boolean=false\nlogin(){\n  console.log(this.loginForm.value)\n  var user=this.loginForm.value\nthis._authService.loginUser(user).subscribe(data => \n  {console.log(data.token)\n  localStorage.setItem(\"token\",data.token)\n  this.router.navigateByUrl(\"/list\")\n},\n(error) => {\n  this.showErrorMessage = true;\n}\n)\n}\n}\n","<div class=\"loginPage\">\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12 mt-5\">\n            <div class=\"formBox\">\n                <form (ngSubmit)=\"login()\" [formGroup]='loginForm'>\n                    <div  class=\"form-group\" class=\"mb-5\">\n                   <h2 class=\"mb-5\">Login</h2>\n                      <input  formControlName='email' type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n                      <div *ngIf=\"loginForm.controls.email.errors !=null && loginForm.controls.email.touched\"  class=\" alert alert-danger\">write a valid email</div>\n                    </div>\n                    <div class=\"form-group\">\n                     \n                      <input formControlName='password' type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n                      <div *ngIf=\"loginForm.controls.password.errors !=null && loginForm.controls.password.touched\"  class=\"alert alert-danger\">password is required</div>\n                    </div>\n                      \n                    <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-primary\">Login</button>\n                    <div *ngIf=\"showErrorMessage\">\n                      <p class=\" alert alert-danger mt-2\">Invalid username and password Please try again</p>\n                    </div>\n                  </form>\n            </div>\n        </div>\n    </div>\n</div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class TokenInterceptorServiceInterceptor implements HttpInterceptor {\n\n  constructor() {}\n   token=localStorage.getItem(\"token\")\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const cloneReq = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.token}`\n      }\n    });\n    return next.handle(cloneReq)\n\n  }\n  \n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}